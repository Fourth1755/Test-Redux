{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/GitHub/Test-Redux/src/pages/AnimeList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { delteList } from \"../actions/animeListActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeList = () => {\n  _s();\n\n  const animeList = useSelector(state => state.animeList);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Anime List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), animeList.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: \"List is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this) : animeList.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => dispatch(),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimeList, \"zWvXkH9/nBetq9QB1YvJUcl9Qbc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AnimeList;\nexport default AnimeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeList\");","map":{"version":3,"sources":["/home/ubuntu/Documents/GitHub/Test-Redux/src/pages/AnimeList.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","delteList","AnimeList","animeList","state","dispatch","width","length","map","item","id","name","year","quantity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAASC,SAAT,QAA0B,6BAA1B;;;AACA,MAAMC,SAAS,GAAC,MAAI;AAAA;;AAChB,QAAMC,SAAS,GAACJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACD,SAAd,CAA3B;AACA,QAAME,QAAQ,GAACL,WAAW,EAA1B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,KAAK,EAAE;AAACM,QAAAA,KAAK,EAAC;AAAP,OAAd;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKH,SAAS,CAACI,MAAV,KAAmB,CAAnB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAC0BJ,SAAS,CAACK,GAAV,CAAcC,IAAI,iBACzC;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,iCAAI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,gBAAhC;AAAiD,YAAA,OAAO,EAAE,MAAIR,QAAQ,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAASI,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADuB,CAT/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA1BD;;GAAMR,S;UACcH,W,EACDC,W;;;KAFbE,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useSelector,useDispatch} from 'react-redux'\nimport { delteList } from \"../actions/animeListActions\";\nconst AnimeList=()=>{\n    const animeList=useSelector(state=>state.animeList)\n    const dispatch=useDispatch()\n    return(\n        <div className=\"container\" > \n            <h1>My Anime List</h1>\n            <table style={{width:'100%'}}>\n                <tr>\n                    <th>id</th>\n                    <th>name</th>\n                    <th>year</th>\n                    <th>count</th>\n                    <th>delete</th>\n                </tr>\n                {animeList.length===0?\n                    <tr>List is empty</tr>:animeList.map(item=>\n                    <tr key={item.id}>\n                        <td>{item.id}</td>\n                        <td>{item.name}</td>\n                        <td>{item.year}</td>\n                        <td>{item.quantity}</td>\n                        <td><button type=\"button\" className=\"btn btn-danger\" onClick={()=>dispatch()}>Delete</button></td>\n                    </tr>)}\n            </table>\n        </div>\n    )\n}\nexport default AnimeList;"]},"metadata":{},"sourceType":"module"}